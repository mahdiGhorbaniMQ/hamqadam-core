# ==========================================
# PRODUCTION PROFILE SETTINGS (application-prod.properties)
# ==========================================
server.port=8080
# Standard port for production

# MongoDB for Production (USE ENVIRONMENT VARIABLES FOR SENSITIVE PARTS)
# Example: mongodb://user:pass@prod-mongo-host:27017/hamqadam_prod_db
# It's highly recommended to set the full URI, or at least username/password, via environment variables.
# spring.data.mongodb.uri=${MONGO_PROD_URI}
# spring.data.mongodb.username=${MONGO_PROD_USER}
# spring.data.mongodb.password=${MONGO_PROD_PASS}

# JWT for Production (SECRET MUST COME FROM ENVIRONMENT VARIABLE)
jwt.secret=${JWT_SECRET_KEY}
# CRITICAL: Set this as an environment variable in your prod environment
jwt.expiration.ms=7200000
# 2 hours for production

# Logging for Production (less verbose, focused on INFO and ERROR)
logging.level.root=INFO
logging.level.ir.hamqadam.core=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.security=INFO
logging.level.org.springframework.data.mongodb.core.MongoTemplate=WARN
# Consider using a structured logging format (e.g., JSON) for easier processing by log management systems.
# logging.pattern.console= # If using JSON appender in logback-spring.xml
# logging.file.name=/var/log/hamqadam/hamqadam-core.log # Example production log file path

# Springdoc for Production (often disabled or secured)
springdoc.swagger-ui.enabled=false
# Disable Swagger UI in production for security
# Or, if enabled, ensure it's behind authentication/authorization.

# Actuator for Production (expose minimally and securely)
management.endpoints.web.exposure.include=health,info,prometheus
# Only expose what's needed for monitoring
management.endpoint.health.show-details=when_authorized
# Requires security for detailed health
# All other actuator endpoints should ideally be accessed via JMX or a secure management interface.
# Ensure Actuator endpoints are secured using Spring Security.

# File storage for prod (likely an S3 bucket or dedicated file server)
# hamqadam.file-storage.type=s3
# hamqadam.file-storage.s3.bucket-name=${S3_BUCKET_NAME}
# hamqadam.file-storage.s3.region=${S3_REGION}
# (Access keys for S3 should come from environment variables or IAM roles)